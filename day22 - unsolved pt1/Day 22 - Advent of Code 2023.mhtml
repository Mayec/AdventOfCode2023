From: <Saved by Blink>
Snapshot-Content-Location: https://adventofcode.com/2023/day/22
Subject: Day 22 - Advent of Code 2023
Date: Sat, 23 Dec 2023 00:43:16 +0100
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--d4fvOG8CpE6FiwXs99HFOohLPAcUqqNo6UaTDEjNSV----"


------MultipartBoundary--d4fvOG8CpE6FiwXs99HFOohLPAcUqqNo6UaTDEjNSV----
Content-Type: text/html
Content-ID: <frame-5563C3B6E6FC0C494786B5BAE85633C4@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://adventofcode.com/2023/day/22

<!DOCTYPE html><html lang=3D"en-us"><head><meta http-equiv=3D"Content-Type"=
 content=3D"text/html; charset=3DUTF-8">

<title>Day 22 - Advent of Code 2023</title>
<link rel=3D"stylesheet" type=3D"text/css" href=3D"https://adventofcode.com=
/static/style.css?31">
<link rel=3D"stylesheet alternate" type=3D"text/css" href=3D"https://advent=
ofcode.com/static/highcontrast.css?1" title=3D"High Contrast">
<link rel=3D"shortcut icon" href=3D"https://adventofcode.com/favicon.png">

</head><!--




Oh, hello!  Funny seeing you here.

I appreciate your enthusiasm, but you aren't going to find much down here.
There certainly aren't clues to any of the puzzles.  The best surprises don=
't
even appear in the source until you unlock them for real.

Please be careful with automated requests; I'm not a massive company, and I=
 can
only take so much traffic.  Please be considerate so that everyone gets to =
play.

If you're curious about how Advent of Code works, it's running on some cust=
om
Perl code. Other than a few integrations (auth, analytics, social media), I
built the whole thing myself, including the design, animations, prose, and =
all
of the puzzles.

The puzzles are most of the work; preparing a new calendar and a new set of
puzzles each year takes all of my free time for 4-5 months. A lot of effort
went into building this thing - I hope you're enjoying playing it as much a=
s I
enjoyed making it for you!

If you'd like to hang out, I'm @ericwastl@hachyderm.io on Mastodon and
@ericwastl on Twitter.

- Eric Wastl


















































-->
<body>
<header><div><h1 class=3D"title-global"><a href=3D"https://adventofcode.com=
/">Advent of Code</a></h1><nav><ul><li><a href=3D"https://adventofcode.com/=
2023/about">[About]</a></li><li><a href=3D"https://adventofcode.com/2023/ev=
ents">[Events]</a></li><li><a href=3D"https://teespring.com/stores/advent-o=
f-code" target=3D"_blank">[Shop]</a></li><li><a href=3D"https://adventofcod=
e.com/2023/settings">[Settings]</a></li><li><a href=3D"https://adventofcode=
.com/2023/auth/logout">[Log Out]</a></li></ul></nav><div class=3D"user">May=
ec Rancel <span class=3D"star-count">33*</span></div></div><div><h1 class=
=3D"title-event">&nbsp;&nbsp;<span class=3D"title-event-wrap">0.0.0.0:</spa=
n><a href=3D"https://adventofcode.com/2023">2023</a><span class=3D"title-ev=
ent-wrap"></span></h1><nav><ul><li><a href=3D"https://adventofcode.com/2023=
">[Calendar]</a></li><li><a href=3D"https://adventofcode.com/2023/support">=
[AoC++]</a></li><li><a href=3D"https://adventofcode.com/2023/sponsors">[Spo=
nsors]</a></li><li><a href=3D"https://adventofcode.com/2023/leaderboard">[L=
eaderboard]</a></li><li><a href=3D"https://adventofcode.com/2023/stats">[St=
ats]</a></li></ul></nav></div></header>

<div id=3D"sidebar">
<div id=3D"sponsor"><div class=3D"quiet">Our <a href=3D"https://adventofcod=
e.com/2023/sponsors">sponsors</a> help make Advent of Code possible:</div><=
div class=3D"sponsor"><a href=3D"https://optiver.com/advent-of-code" target=
=3D"_blank" rel=3D"noopener">Optiver</a> - Ready to solve puzzles for a liv=
ing? We=E2=80=99re hiring C++, C# and Python experts to code sub-nanosecond=
 trading systems. Get ready for problem solving, continuous learning and th=
e freedom to bring your software solutions to life</div></div>
</div><!--/sidebar-->

<main>
<article class=3D"day-desc"><h2>--- Day 22: Sand Slabs ---</h2><p>Enough sa=
nd has fallen; it can finally filter water for Snow Island.</p>
<p>Well, <em>almost</em>.</p>
<p>The sand has been falling as large compacted <em>bricks</em> of sand, pi=
ling up to form an impressive stack here near the edge of Island Island. In=
 order to make use of the sand to filter water, some of the bricks will nee=
d to be broken apart - nay, <em><span title=3D"Disintegrate - X,R
Sorcery
Destroy X target bricks of sand. They cannot be regenerated. Create 32768 0=
/1 colorless Sand artifact creature tokens for each brick of sand destroyed=
 in this way.">disintegrated</span></em> - back into freely flowing sand.</=
p>
<p>The stack is tall enough that you'll have to be careful about choosing w=
hich bricks to disintegrate; if you disintegrate the wrong brick, large por=
tions of the stack could topple, which sounds pretty dangerous.</p>
<p>The Elves responsible for water filtering operations took a <em>snapshot=
 of the bricks while they were still falling</em> (your puzzle input) which=
 should let you work out which bricks are safe to disintegrate. For example=
:</p>
<pre><code>1,0,1~1,2,1
0,0,2~2,0,2
0,2,3~2,2,3
0,0,4~0,2,4
2,0,5~2,2,5
0,1,6~2,1,6
1,1,8~1,1,9
</code></pre>
<p>Each line of text in the snapshot represents the position of a single br=
ick at the time the snapshot was taken. The position is given as two <code>=
x,y,z</code> coordinates - one for each end of the brick - separated by a t=
ilde (<code>~</code>). Each brick is made up of a single straight line of c=
ubes, and the Elves were even careful to choose a time for the snapshot tha=
t had all of the free-falling bricks at <em>integer positions above the gro=
und</em>, so the whole snapshot is aligned to a three-dimensional cube grid=
.</p>
<p>A line like <code>2,2,2~2,2,2</code> means that both ends of the brick a=
re at the same coordinate - in other words, that the brick is a single cube=
.</p>
<p>Lines like <code>0,0,10~1,0,10</code> or <code>0,0,10~0,1,10</code> both=
 represent bricks that are <em>two cubes</em> in volume, both oriented hori=
zontally. The first brick extends in the <code>x</code> direction, while th=
e second brick extends in the <code>y</code> direction.</p>
<p>A line like <code>0,0,1~0,0,10</code> represents a <em>ten-cube brick</e=
m> which is oriented <em>vertically</em>. One end of the brick is the cube =
located at <code>0,0,1</code>, while the other end of the brick is located =
directly above it at <code>0,0,10</code>.</p>
<p>The ground is at <code>z=3D0</code> and is perfectly flat; the lowest <c=
ode>z</code> value a brick can have is therefore <code>1</code>. So, <code>=
5,5,1~5,6,1</code> and <code>0,2,1~0,2,5</code> are both resting on the gro=
und, but <code>3,3,2~3,3,3</code> was above the ground at the time of the s=
napshot.</p>
<p>Because the snapshot was taken while the bricks were still falling, some=
 bricks will <em>still be in the air</em>; you'll need to start by figuring=
 out where they will end up. Bricks are magically stabilized, so they <em>n=
ever rotate</em>, even in weird situations like where a long horizontal bri=
ck is only supported on one end. Two bricks cannot occupy the same position=
, so a falling brick will come to rest upon the first other brick it encoun=
ters.</p>
<p>Here is the same example again, this time with each brick given a letter=
 so it can be marked in diagrams:</p>
<pre><code>1,0,1~1,2,1   &lt;- A
0,0,2~2,0,2   &lt;- B
0,2,3~2,2,3   &lt;- C
0,0,4~0,2,4   &lt;- D
2,0,5~2,2,5   &lt;- E
0,1,6~2,1,6   &lt;- F
1,1,8~1,1,9   &lt;- G
</code></pre>
<p>At the time of the snapshot, from the side so the <code>x</code> axis go=
es left to right, these bricks are arranged like this:</p>
<pre><code> x
012
.G. 9
.G. 8
... 7
FFF 6
..E 5 z
D.. 4
CCC 3
BBB 2
.A. 1
--- 0
</code></pre>
<p>Rotating the perspective 90 degrees so the <code>y</code> axis now goes =
left to right, the same bricks are arranged like this:</p>
<pre><code> y
012
.G. 9
.G. 8
... 7
.F. 6
EEE 5 z
DDD 4
..C 3
B.. 2
AAA 1
--- 0
</code></pre>
<p>Once all of the bricks fall downward as far as they can go, the stack lo=
oks like this, where <code>?</code> means bricks are hidden behind other br=
icks at that location:</p>
<pre><code> x
012
.G. 6
.G. 5
FFF 4
D.E 3 z
??? 2
.A. 1
--- 0
</code></pre>
<p>Again from the side:</p>
<pre><code> y
012
.G. 6
.G. 5
.F. 4
??? 3 z
B.C 2
AAA 1
--- 0
</code></pre>
<p>Now that all of the bricks have settled, it becomes easier to tell which=
 bricks are supporting which other bricks:</p>
<ul>
<li>Brick <code>A</code> is the only brick supporting bricks <code>B</code>=
 and <code>C</code>.</li>
<li>Brick <code>B</code> is one of two bricks supporting brick <code>D</cod=
e> and brick <code>E</code>.</li>
<li>Brick <code>C</code> is the other brick supporting brick <code>D</code>=
 and brick <code>E</code>.</li>
<li>Brick <code>D</code> supports brick <code>F</code>.</li>
<li>Brick <code>E</code> also supports brick <code>F</code>.</li>
<li>Brick <code>F</code> supports brick <code>G</code>.</li>
<li>Brick <code>G</code> isn't supporting any bricks.</li>
</ul>
<p>Your first task is to figure out <em>which bricks are safe to disintegra=
te</em>. A brick can be safely disintegrated if, after removing it, <em>no =
other bricks</em> would fall further directly downward. Don't actually disi=
ntegrate any bricks - just determine what would happen if, for each brick, =
only that brick were disintegrated. Bricks can be disintegrated even if the=
y're completely surrounded by other bricks; you can squeeze between bricks =
if you need to.</p>
<p>In this example, the bricks can be disintegrated as follows:</p>
<ul>
<li>Brick <code>A</code> cannot be disintegrated safely; if it were disinte=
grated, bricks <code>B</code> and <code>C</code> would both fall.</li>
<li>Brick <code>B</code> <em>can</em> be disintegrated; the bricks above it=
 (<code>D</code> and <code>E</code>) would still be supported by brick <cod=
e>C</code>.</li>
<li>Brick <code>C</code> <em>can</em> be disintegrated; the bricks above it=
 (<code>D</code> and <code>E</code>) would still be supported by brick <cod=
e>B</code>.</li>
<li>Brick <code>D</code> <em>can</em> be disintegrated; the brick above it =
(<code>F</code>) would still be supported by brick <code>E</code>.</li>
<li>Brick <code>E</code> <em>can</em> be disintegrated; the brick above it =
(<code>F</code>) would still be supported by brick <code>D</code>.</li>
<li>Brick <code>F</code> cannot be disintegrated; the brick above it (<code=
>G</code>) would fall.</li>
<li>Brick <code>G</code> <em>can</em> be disintegrated; it does not support=
 any other bricks.</li>
</ul>
<p>So, in this example, <code><em>5</em></code> bricks can be safely disint=
egrated.</p>
<p>Figure how the blocks will settle based on the snapshot. Once they've se=
ttled, consider disintegrating a single brick; <em>how many bricks could be=
 safely chosen as the one to get disintegrated?</em></p>
</article>
<p>To begin, <a href=3D"https://adventofcode.com/2023/day/22/input" target=
=3D"_blank">get your puzzle input</a>.</p>
<form method=3D"post" action=3D"https://adventofcode.com/2023/day/22/answer=
"><p>Answer: <input type=3D"text" name=3D"answer" autocomplete=3D"off"> <in=
put type=3D"submit" value=3D"[Submit]"></p></form>
<p>You can also <span class=3D"share">[Share<span class=3D"share-content">o=
n
  <a href=3D"https://twitter.com/intent/tweet?text=3D%22Sand+Slabs%22+%2D+D=
ay+22+%2D+Advent+of+Code+2023&amp;url=3Dhttps%3A%2F%2Fadventofcode%2Ecom%2F=
2023%2Fday%2F22&amp;related=3Dericwastl&amp;hashtags=3DAdventOfCode" target=
=3D"_blank">Twitter</a>
  <a target=3D"_blank">Mastodon</a></span>]</span> this puzzle.</p>
</main>

<!-- ga -->

<!-- /ga -->

</body></html>
------MultipartBoundary--d4fvOG8CpE6FiwXs99HFOohLPAcUqqNo6UaTDEjNSV----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://adventofcode.com/static/style.css?31

@charset "utf-8";

@import url("https://fonts.googleapis.com/css2?family=3DSource+Code+Pro:wgh=
t@300");

body { background: rgb(15, 15, 35); color: rgb(204, 204, 204); font-family:=
 "Source Code Pro", monospace; font-weight: 300; font-size: 14pt; min-width=
: 60em; }

img { border: 0px; }

a { outline: 0px; }

main, figure, figcaption { display: block; }

pre, code { font-family: "Source Code Pro", monospace; }

header, main { text-size-adjust: none; }

a { text-decoration: none; color: rgb(0, 153, 0); }

a:hover, a:focus { color: rgb(153, 255, 153); }

h1, h2 { font-size: 1em; font-weight: normal; }

code { position: relative; display: inline-block; margin: 0px; padding: 0px=
; }

code::before { z-index: -1; content: ""; position: absolute; display: block=
; inset: 3px -2px 0px; border: 1px solid rgb(51, 51, 64); background: rgb(1=
6, 16, 26); }

pre.wrap { max-width: 100%; white-space: pre-wrap; }

.quiet { opacity: 0.5; }

p.wrap { width: 45em; }

.hidden-until-hover { border: 1px dotted gray; overflow: hidden; position: =
relative; padding: 0px 0.5em; transition: border-color 0s linear 5s; }

.hidden-until-hover::before { content: "(hover to reveal)"; position: absol=
ute; opacity: 0.5; text-align: center; left: 0px; top: 0px; width: 100%; ov=
erflow: hidden; transition: width 0s linear 5s; }

.hidden-until-hover > * { visibility: hidden; transition: visibility 0s lin=
ear 5s; }

.hidden-until-hover:hover { transition: border-color 0s linear 1s; border-c=
olor: transparent; }

.hidden-until-hover:hover::before { content: "( keep hovering )"; transitio=
n: width 0s linear 1s; width: 0px; }

.hidden-until-hover:hover > * { transition: visibility 0s linear 1s; visibi=
lity: visible; }

.warning:not(.warning-active) { transition: color 1s ease 0s, opacity 1s ea=
se 0s; }

.warning-active { color: rgb(255, 0, 0); opacity: 1; }

.star-count { color: rgb(255, 255, 102); }

.supporter-badge { color: rgb(255, 255, 102); }

a.supporter-badge:hover, a.supporter-badge:focus { text-decoration: none; c=
olor: rgb(255, 255, 204); text-shadow: rgb(255, 255, 102) 0px 0px 5px; }

.sponsor-badge { color: rgb(121, 162, 216); }

a.sponsor-badge:hover, a.sponsor-badge:focus { text-decoration: none; color=
: rgb(204, 219, 237); text-shadow: rgb(121, 162, 216) 0px 0px 5px; }

#sidebar { width: 200px; float: right; margin: 0px 15px 2em 2em; position: =
relative; z-index: 10; }

#sponsor { margin-bottom: 2.5em; }

header { white-space: nowrap; cursor: default; z-index: 100; margin-bottom:=
 2em; }

header h1 { display: inline-block; margin: 0px; padding-right: 1em; }

header h1 a, header h1 span { display: inline-block; text-decoration: none;=
 color: rgb(0, 204, 0); text-shadow: rgb(0, 204, 0) 0px 0px 2px, rgb(0, 204=
, 0) 0px 0px 5px; }

header h1 a:hover, header h1 a:focus { color: rgb(153, 255, 153); text-shad=
ow: rgb(153, 255, 153) 0px 0px 2px, rgb(153, 255, 153) 0px 0px 5px; }

header h1.title-event .title-event-wrap { opacity: 0.33; white-space: pre; =
}

header .user { display: inline-block; padding-left: 1em; }

header nav { display: inline-block; }

header nav ul { list-style-type: none; padding: 0px; margin: 0px; display: =
inline-block; }

header nav li { display: inline-block; padding: 0px 0.6em; }

header nav a { display: inline-block; text-decoration: none; outline: none;=
 }

input[type=3D"text"], textarea { color: inherit; border: 1px solid rgb(102,=
 102, 102); background: rgb(16, 16, 26); padding: 0px 2px; font-family: inh=
erit; font-size: inherit; margin: 0px; }

textarea { vertical-align: top; }

label img { vertical-align: bottom; position: relative; top: -3px; margin-r=
ight: 0.3em; }

input[type=3D"radio"] { display: none; }

input[type=3D"radio"] ~ span { cursor: pointer; display: inline-block; }

input[type=3D"radio"] ~ span::before { content: "( ) "; }

input[type=3D"radio"] ~ span:hover, input[type=3D"radio"] ~ span:focus { ba=
ckground-color: rgb(25, 25, 59); }

input[type=3D"radio"]:checked ~ span { color: rgb(255, 255, 255); }

input[type=3D"radio"]:checked ~ span::before { content: "(O) "; }

input[type=3D"checkbox"] { display: none; }

input[type=3D"checkbox"] ~ span { cursor: pointer; display: inline-block; }

input[type=3D"checkbox"] ~ span::before { content: "[ ] "; }

input[type=3D"checkbox"] ~ span:hover, input[type=3D"checkbox"] ~ span:focu=
s { background-color: rgb(25, 25, 59); }

input[type=3D"checkbox"]:checked ~ span { color: rgb(255, 255, 255); }

input[type=3D"checkbox"]:checked ~ span::before { content: "[X] "; }

input[type=3D"checkbox"]:disabled ~ span { opacity: 0.3; cursor: default; }

input[type=3D"checkbox"]:disabled ~ span::before { content: "[-] "; }

input[type=3D"checkbox"]:disabled ~ span:hover { background-color: transpar=
ent; }

input[type=3D"submit"] { background: transparent; border: 0px; font-family:=
 inherit; font-size: inherit; margin: 0px; padding: 0px; color: rgb(0, 153,=
 0); cursor: pointer; }

input[type=3D"submit"]:hover, input[type=3D"submit"]:focus { color: rgb(153=
, 255, 153); }

article { width: 45em; margin-bottom: 2em; margin-top: 2em; }

article:first-of-type { margin-top: 0px; }

article h2 { color: rgb(255, 255, 255); margin-top: 1em; margin-bottom: 1em=
; white-space: nowrap; }

article h2 + * { margin-top: 0px; }

article em { color: rgb(255, 255, 255); font-style: normal; text-shadow: rg=
b(255, 255, 255) 0px 0px 5px; }

article em.star { color: rgb(255, 255, 102); font-style: normal; text-shado=
w: rgb(255, 255, 102) 0px 0px 5px; }

article a { white-space: nowrap; }

article .aside { opacity: 0.6; }

article ul { list-style-type: none; padding: 0px; }

article li { padding-left: 2.5em; position: relative; }

article li::before { content: "=C2=A0=C2=A0-=C2=A0"; position: absolute; le=
ft: 0px; top: 0px; }

.day-success { color: rgb(255, 255, 102); text-shadow: rgb(255, 255, 102) 0=
px 0px 5px; }

form#settings input[type=3D"radio"] ~ span { min-width: 30em; }

form#settings input[type=3D"checkbox"] ~ span { min-width: 30em; }

.share { color: rgb(0, 153, 0); cursor: default; transition: color 0.2s eas=
e 1s; }

.share:hover, .share:focus-within { color: rgb(170, 255, 170); transition: =
color 0.2s ease 0s; }

.share .share-content { display: inline-block; vertical-align: text-bottom;=
 white-space: nowrap; overflow: hidden; max-width: 0px; transition: max-wid=
th 0.2s ease 1s; }

.share .share-content::before { content: "=C2=A0"; }

.share .share-content::after { }

.share:hover .share-content, .share:focus-within .share-content { max-width=
: 45em; transition: max-width 0.2s ease 0s; }

.puzzle-input { border: 1px solid rgb(153, 153, 153); background: rgb(51, 5=
1, 51); color: rgb(255, 255, 255); text-shadow: rgb(255, 255, 255) 0px 0px =
5px; }

.calendar { cursor: default; user-select: none; }

.calendar > span { color: rgb(51, 51, 51); }

.calendar > a { text-decoration: none; color: rgb(102, 102, 102); outline: =
none; cursor: default; }

.calendar a:hover, .calendar a:focus { background-color: rgba(119, 119, 165=
, 0.2); cursor: pointer; }

#calendar-countdown { padding-left: 0.5em; color: rgb(204, 204, 204); }

.calendar .calendar-day { color: rgb(102, 102, 102); }

.calendar a .calendar-day { color: rgb(204, 204, 204); }

.calendar a .calendar-mark-complete, .calendar a .calendar-mark-verycomplet=
e { visibility: hidden; }

.calendar a.calendar-complete .calendar-mark-complete, .calendar a.calendar=
-verycomplete .calendar-mark-complete { visibility: visible; color: rgb(255=
, 255, 102); }

.calendar a.calendar-verycomplete .calendar-mark-verycomplete { visibility:=
 visible; color: rgb(255, 255, 102); }

.calendar .calendar-day-new { animation: 5s ease 0s 1 normal none running a=
nim-day-new; }

.calendar .calendar-day-new .calendar-day { animation: 5s ease 0s 1 normal =
none running anim-day-new-day; }

@keyframes anim-day-new {=20
  0% { color: rgb(51, 51, 51); text-shadow: transparent 0px 0px 5px; }
  25% { color: rgb(255, 255, 255); text-shadow: rgb(255, 255, 255) 0px 0px =
5px; }
  100% { color: rgb(102, 102, 102); text-shadow: transparent 0px 0px 5px; }
}

@keyframes anim-day-new-day {=20
  0% { color: rgb(102, 102, 102); text-shadow: transparent 0px 0px 5px; }
  25% { color: rgb(255, 255, 255); text-shadow: rgb(255, 255, 255) 0px 0px =
5px; }
  100% { color: rgb(204, 204, 204); text-shadow: transparent 0px 0px 5px; }
}

.eventlist-event { white-space: pre; }

.stats > span, .stats > span .stats-firstonly, .stats > span .stats-both { =
color: rgb(102, 102, 102); }

.stats > a { color: rgb(204, 204, 204); min-width: 35em; display: inline-bl=
ock; }

.stats > a:hover, .stats > a:focus { background-color: rgb(30, 30, 70); }

.stats-firstonly { color: rgb(153, 153, 204); }

.stats-both { color: rgb(255, 255, 102); }

.leaderboard-daylinks { cursor: default; }

.leaderboard-daylinks-selected { color: rgb(255, 255, 255); text-shadow: rg=
b(255, 255, 255) 0px 0px 5px; }

.leaderboard-daydesc-first { color: rgb(153, 153, 204); }

.leaderboard-daydesc-both { color: rgb(255, 255, 102); }

.leaderboard-entry { white-space: pre; }

.leaderboard-entry .leaderboard-totalscore { color: rgb(255, 255, 255); }

.leaderboard-anon { opacity: 0.6; }

.leaderboard-userphoto { display: inline-block; height: 20px; width: 20px; =
margin: 0px 0.5em; text-align: center; }

.leaderboard-userphoto img { height: 20px; max-width: 20px; vertical-align:=
 middle; position: relative; top: -2px; }

.leaderboard-time { opacity: 0.5; }

.privboard-row { white-space: pre; }

.privboard-name { vertical-align: text-bottom; }

.privboard-days > span { display: inline-block; color: rgb(51, 51, 51); }

.privboard-days > a { display: inline-block; }

.privboard-star-locked { visibility: hidden; }

.privboard-star-unlocked { color: rgb(51, 51, 51); }

.privboard-star-firstonly { color: rgb(153, 153, 204); }

.privboard-star-both { color: rgb(255, 255, 102); }

.privboard-delbtn { opacity: 0.33; }

.privboard-row:hover .privboard-delbtn { opacity: 1; }

.sponsors { width: 46em; }

.sponsor { margin: 1em 0px; }
------MultipartBoundary--d4fvOG8CpE6FiwXs99HFOohLPAcUqqNo6UaTDEjNSV----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@300

@charset "utf-8";

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 300; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_diYsKILx=
Rpg3hIP6sJ7fM7PqPMcMnZFqUwX28DJKQtMRrTEUc.woff2") format("woff2"); unicode-=
range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2=
F; }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 300; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_diYsKILx=
Rpg3hIP6sJ7fM7PqPMcMnZFqUwX28DJKQtM1rTEUc.woff2") format("woff2"); unicode-=
range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 300; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_diYsKILx=
Rpg3hIP6sJ7fM7PqPMcMnZFqUwX28DJKQtMVrTEUc.woff2") format("woff2"); unicode-=
range: U+1F00-1FFF; }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 300; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_diYsKILx=
Rpg3hIP6sJ7fM7PqPMcMnZFqUwX28DJKQtMprTEUc.woff2") format("woff2"); unicode-=
range: U+370-3FF; }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 300; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_diYsKILx=
Rpg3hIP6sJ7fM7PqPMcMnZFqUwX28DJKQtMZrTEUc.woff2") format("woff2"); unicode-=
range: U+102-103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+=
300-301, U+303-304, U+308-309, U+323, U+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 300; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_diYsKILx=
Rpg3hIP6sJ7fM7PqPMcMnZFqUwX28DJKQtMdrTEUc.woff2") format("woff2"); unicode-=
range: U+100-2AF, U+304, U+308, U+329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+=
20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 300; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_diYsKILx=
Rpg3hIP6sJ7fM7PqPMcMnZFqUwX28DJKQtMlrTA.woff2") format("woff2"); unicode-ra=
nge: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308=
, U+329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+221=
5, U+FEFF, U+FFFD; }
------MultipartBoundary--d4fvOG8CpE6FiwXs99HFOohLPAcUqqNo6UaTDEjNSV----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://adventofcode.com/static/highcontrast.css?1

@charset "utf-8";

@import url("https://fonts.googleapis.com/css2?family=3DSource+Code+Pro:wgh=
t@400;900");

* { background: transparent !important; color: black !important; text-shado=
w: none !important; }

body { background: white !important; font-weight: 400 !important; }

article [title] { border-bottom-color: black !important; }

a { color: rgb(0, 0, 255) !important; text-decoration: underline !important=
; }

em { font-weight: 900 !important; }

code::before { background: transparent !important; border-color: black !imp=
ortant; }

.stats-firstonly { opacity: 0.5; }

.privboard-star-firstonly { opacity: 0.667; }

.privboard-star-unlocked { opacity: 0.333; }
------MultipartBoundary--d4fvOG8CpE6FiwXs99HFOohLPAcUqqNo6UaTDEjNSV----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@400;900

@charset "utf-8";

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 400; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_SiYsKILx=
Rpg3hIP6sJ7fM7PqlMOvWjMY.woff2") format("woff2"); unicode-range: U+460-52F,=
 U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 400; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_SiYsKILx=
Rpg3hIP6sJ7fM7PqlOevWjMY.woff2") format("woff2"); unicode-range: U+301, U+4=
00-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 400; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_SiYsKILx=
Rpg3hIP6sJ7fM7PqlMevWjMY.woff2") format("woff2"); unicode-range: U+1F00-1FF=
F; }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 400; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_SiYsKILx=
Rpg3hIP6sJ7fM7PqlPuvWjMY.woff2") format("woff2"); unicode-range: U+370-3FF;=
 }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 400; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_SiYsKILx=
Rpg3hIP6sJ7fM7PqlMuvWjMY.woff2") format("woff2"); unicode-range: U+102-103,=
 U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+300-301, U+303-30=
4, U+308-309, U+323, U+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 400; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_SiYsKILx=
Rpg3hIP6sJ7fM7PqlM-vWjMY.woff2") format("woff2"); unicode-range: U+100-2AF,=
 U+304, U+308, U+329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD=
-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 400; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_SiYsKILx=
Rpg3hIP6sJ7fM7PqlPevW.woff2") format("woff2"); unicode-range: U+0-FF, U+131=
, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-20=
6F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;=
 }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 900; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_SiYsKILx=
Rpg3hIP6sJ7fM7PqlMOvWjMY.woff2") format("woff2"); unicode-range: U+460-52F,=
 U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 900; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_SiYsKILx=
Rpg3hIP6sJ7fM7PqlOevWjMY.woff2") format("woff2"); unicode-range: U+301, U+4=
00-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 900; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_SiYsKILx=
Rpg3hIP6sJ7fM7PqlMevWjMY.woff2") format("woff2"); unicode-range: U+1F00-1FF=
F; }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 900; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_SiYsKILx=
Rpg3hIP6sJ7fM7PqlPuvWjMY.woff2") format("woff2"); unicode-range: U+370-3FF;=
 }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 900; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_SiYsKILx=
Rpg3hIP6sJ7fM7PqlMuvWjMY.woff2") format("woff2"); unicode-range: U+102-103,=
 U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+300-301, U+303-30=
4, U+308-309, U+323, U+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 900; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_SiYsKILx=
Rpg3hIP6sJ7fM7PqlM-vWjMY.woff2") format("woff2"); unicode-range: U+100-2AF,=
 U+304, U+308, U+329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD=
-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 900; src: url("https://fonts.gstatic.com/s/sourcecodepro/v23/HI_SiYsKILx=
Rpg3hIP6sJ7fM7PqlPevW.woff2") format("woff2"); unicode-range: U+0-FF, U+131=
, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-20=
6F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;=
 }
------MultipartBoundary--d4fvOG8CpE6FiwXs99HFOohLPAcUqqNo6UaTDEjNSV------
